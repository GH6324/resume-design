user root;
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    client_max_body_size 50M;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    # 静态资源扩展名列表
    map $uri $is_static {
        default 0;
        ~*\.(js|css|png|jpg|jpeg|gif|svg|woff|woff2|ico|webp|mp4|webm|mp3|ttf|eot)$ 1;
    }

    # Redirect www.91huajian.cn to maobucv.com
    server {
        listen 80;
        server_name www.91huajian.cn;
        return 301 https://maobucv.com$request_uri;
    }

    server {
        listen 443 ssl;
        server_name www.91huajian.cn;

        ssl_certificate /etc/nginx/ssl/fullchain.crt;
        ssl_certificate_key /etc/nginx/ssl/private.pem;

        return 301 https://maobucv.com$request_uri;
    }

    # Redirect 91huajian.cn to maobucv.com
    server {
        listen 80;
        server_name 91huajian.cn;
        return 301 https://maobucv.com$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name 91huajian.cn;

        ssl_certificate /etc/nginx/ssl/fullchain.crt;
        ssl_certificate_key /etc/nginx/ssl/private.pem;

        return 301 https://maobucv.com$request_uri;
    }

    # Redirect www.maobucv.com to maobucv.com
    server {
        listen 80;
        server_name www.maobucv.com;
        return 301 https://maobucv.com$request_uri;
    }

    server {
        listen 443 ssl;
        server_name www.maobucv.com;

        ssl_certificate /etc/nginx/ssl/maobucv.crt;
        ssl_certificate_key /etc/nginx/ssl/maobucv.pem;

        return 301 https://maobucv.com$request_uri;
    }

    # Handle requests for maobucv.com
    server {
        listen 80;
        server_name maobucv.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name maobucv.com;

        ssl_certificate /etc/nginx/ssl/maobucv.crt;
        ssl_certificate_key /etc/nginx/ssl/maobucv.pem;

        # 新增：专门处理sitemap.html
        location = /sitemap.html {
            root /usr/share/nginx/html;
            try_files $uri =404;
            
            # SEO优化设置
            add_header Cache-Control "public, max-age=3600";
            add_header X-Sitemap-Type "FullSiteMap";
            
            # 强制识别为HTML
            types { }
            default_type text/html;
            
            # 调试头（可选）
            add_header X-File-Path "$document_root$uri";
        }

        # 精确匹配模板文件
        location ~ ^/template/template-\d+\.html$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
            
            # 强制识别为HTML
            types { }
            default_type text/html;
            
            # 禁用缓存
            add_header Cache-Control "no-store";
            
            # 调试头
            add_header X-File-Path "$document_root$uri";
        }

        # 2. 禁止直接访问template目录（返回403）
        location = /template/ {
            return 403;
        }

        # 求职攻略
        location ^~ /articles/ {
            client_max_body_size 50M;
            rewrite ^/articles(/.*)$ $1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://119.91.202.144:3210/;
        }

        # Redirect pages
        location ~ /wp-(admin|login|content|includes)/ {
            client_max_body_size 50M;
            return 301 /articles$request_uri;
        }

        # 静态文件直通规则（必须放在最前面）
        location ~* ^/(sitemap\.xml|robots\.txt|.*\.(xml|txt|ico|json|webmanifest)) {
            root /usr/share/nginx/html;
            add_header Cache-Control "public, max-age=3600";
            try_files $uri $uri/ =404;

            # 强制指定 XML 类型
            location ~* \.xml$ {
                types { }
                default_type application/xml;
            }
        }

        location / {
            set $prerender 0;

            # 排除静态资源
            if ($is_static) {
                set $prerender 0;
            }

            # 爬虫检测
            if ($http_user_agent ~* (googlebot|bingbot|yandex|baiduspider|sogouspider|haosouspider|360spider|shenmaspider|sm|yahoo|msnbot|duckduckbot|exabot|facebot|ia_archiver|applebot|slurp|gigabot|teoma|twiceler|rogerbot|voilabot|findlinks|naverbot|mj12bot|ahrefsbot|semrushbot|zoombot|mail\.ru|seznambot|dotbot|liebaospider|curl|wget|python|java|httpclient|go-http|okhttp)) {
                set $prerender 1;
            }

            # 预渲染逻辑
            if ($prerender = 1) {
                error_page 500 502 503 504 = @fallback_to_static;
                rewrite ^/(.*)$ /huajian/render/$1 break; # Correctly handle the path
                proxy_pass http://119.91.202.144:3399; # Ensure this points to your prerender service
                break;
            }

            # 正常静态文件处理
            root /usr/share/nginx/html;
            try_files $uri $uri/ @router;
        }

        # Fallback location to serve static files in case of errors
        location @fallback_to_static {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Forward /huajian interface to specified address
        location /huajian {
            proxy_connect_timeout 600s;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://119.91.202.144:3399/huajian;
        }

        # Handle Vue router refresh
        location @router {
            rewrite ^.*$ /index.html last;
        }
    }

    # 子域名站点nav.maobucv.com
    server {
        listen 80;
        server_name nav.maobucv.com;
        return 301 https://$host$request_uri;
    }

    # 子站点配置
    server {
        listen 443 ssl http2;
        server_name nav.maobucv.com;

        ssl_certificate /etc/nginx/nav/ssl/navmaobucv.crt;
        ssl_certificate_key /etc/nginx/nav/ssl/navmaobucv.pem;

        location ^~ / {
            client_max_body_size 50M;
            rewrite ^/articles(/.*)$ $1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://119.91.202.144:8088/;
        }


        # 禁止访问 .htaccess 文件
        location ~ /\.ht {
            deny all;
        }
    }

    server {
        listen 80;
        server_name tools.maobucv.com;
        return 301 https://$host$request_uri;
    }

    # 子站点tools
    server {
        listen 443 ssl http2;
        server_name tools.maobucv.com;

        # 假设使用与主站点相同的证书，如果需要不同证书可以单独配置
        ssl_certificate /etc/nginx/tools/ssl/toolsmaobucv.crt;
        ssl_certificate_key /etc/nginx/tools/ssl/toolsmaobucv.pem;

        location / {
            # 这里可以根据需要配置代理或直接服务静态文件
            # 示例1：直接服务静态文件
            root /usr/share/nginx/html/tools;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # 禁止访问 .htaccess 文件
        location ~ /\.ht {
            deny all;
        }
    }
}